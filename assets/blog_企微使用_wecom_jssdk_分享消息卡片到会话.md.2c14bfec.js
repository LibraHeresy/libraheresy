import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.4af989bb.js";const h=JSON.parse('{"title":"企微使用 @wecom/jssdk 分享消息卡片到会话","description":"","frontmatter":{},"headers":[],"relativePath":"blog/企微使用_wecom_jssdk_分享消息卡片到会话.md","filePath":"blog/企微使用_wecom_jssdk_分享消息卡片到会话.md","lastUpdated":1698848184000}'),p={name:"blog/企微使用_wecom_jssdk_分享消息卡片到会话.md"},o=l(`<h1 id="企微使用-wecom-jssdk-分享消息卡片到会话" tabindex="-1">企微使用 @wecom/jssdk 分享消息卡片到会话 <a class="header-anchor" href="#企微使用-wecom-jssdk-分享消息卡片到会话" aria-label="Permalink to &quot;企微使用 @wecom/jssdk 分享消息卡片到会话&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>继介绍如何使用 <code>weixin-js-sdk</code> 实现 <code>H5</code> 页面分享到微信后，现在带来 <code>@wecom/jssdk</code> 如何实现分享消息卡片到企微会话中。</p><p><code>@wecom/jssdk</code> 是微信官方出的 <code>npm</code> 包，这就减小了不更新的风险，使用方法倒是大同小异。</p><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><blockquote><p>Vue v2.7.10</p><p>@wecom/jssdk v1.4.3</p></blockquote><h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h2><h3 id="创建企业微信第三方应用" tabindex="-1">创建企业微信第三方应用 <a class="header-anchor" href="#创建企业微信第三方应用" aria-label="Permalink to &quot;创建企业微信第三方应用&quot;">​</a></h3><p><a href="https://developer.work.weixin.qq.com/tutorial/detail/37" target="_blank" rel="noreferrer">如何创建第三方应用</a></p><h3 id="设置安全域名" tabindex="-1">设置安全域名 <a class="header-anchor" href="#设置安全域名" aria-label="Permalink to &quot;设置安全域名&quot;">​</a></h3><p><img src="https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/blog-images/202310101525818.jpg" alt="图片" title="图片"></p><h3 id="开通客户联系权限" tabindex="-1">开通客户联系权限 <a class="header-anchor" href="#开通客户联系权限" aria-label="Permalink to &quot;开通客户联系权限&quot;">​</a></h3><p><img src="https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/blog-images/202310101527050.png" alt="图片" title="图片"></p><h3 id="注册-jssdk-对象" tabindex="-1">注册 <code>JSSDK</code> 对象 <a class="header-anchor" href="#注册-jssdk-对象" aria-label="Permalink to &quot;注册 \`JSSDK\` 对象&quot;">​</a></h3><p><a href="https://developer.work.weixin.qq.com/document/path/90506#%E8%8E%B7%E5%8F%96%E5%BA%94%E7%94%A8%E7%9A%84jsapi-ticket" target="_blank" rel="noreferrer">获取jsapi_ticket</a></p><p><a href="https://developer.work.weixin.qq.com/document/path/91039" target="_blank" rel="noreferrer">获取access_token</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> ww </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@wecom/jssdk&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ww.</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  corpId: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 必填，当前用户企业所属企业ID</span></span>
<span class="line"><span style="color:#E1E4E8;">  agentId: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 应用id</span></span>
<span class="line"><span style="color:#E1E4E8;">  jsApiList: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;sendChatMessage&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 分享消息到当前会话</span></span>
<span class="line"><span style="color:#E1E4E8;">  ], </span><span style="color:#6A737D;">// 必填，需要使用的JSAPI列表</span></span>
<span class="line"><span style="color:#E1E4E8;">  getConfigSignature, </span><span style="color:#6A737D;">// 必填，根据url生成企业签名的回调函数</span></span>
<span class="line"><span style="color:#E1E4E8;">  getAgentConfigSignature, </span><span style="color:#6A737D;">// 必填，根据url生成应用签名的回调函数</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getConfigSignature</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">url</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 根据 url 生成企业签名</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 生成方法参考 https://developer.work.weixin.qq.com/document/path/90539</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getJsApiSignature</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getAgentConfigSignature</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">url</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 根据 url 生成应用签名，生成方法同上，但需要使用应用的 jsapi_ticket</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getJsApiSignature</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getJsApiSignature</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getJsApiTicket</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 获取后端返回的 jsapi_ticket</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ww.</span><span style="color:#B392F0;">getSignature</span><span style="color:#E1E4E8;">(res.data </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 只传入 jsapi_ticket 字符串的时候，就会自动获取页面 url，时间戳，唯一标识符</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> ww </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@wecom/jssdk&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ww.</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  corpId: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 必填，当前用户企业所属企业ID</span></span>
<span class="line"><span style="color:#24292E;">  agentId: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 应用id</span></span>
<span class="line"><span style="color:#24292E;">  jsApiList: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;sendChatMessage&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 分享消息到当前会话</span></span>
<span class="line"><span style="color:#24292E;">  ], </span><span style="color:#6A737D;">// 必填，需要使用的JSAPI列表</span></span>
<span class="line"><span style="color:#24292E;">  getConfigSignature, </span><span style="color:#6A737D;">// 必填，根据url生成企业签名的回调函数</span></span>
<span class="line"><span style="color:#24292E;">  getAgentConfigSignature, </span><span style="color:#6A737D;">// 必填，根据url生成应用签名的回调函数</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getConfigSignature</span><span style="color:#24292E;">(</span><span style="color:#E36209;">url</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 根据 url 生成企业签名</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 生成方法参考 https://developer.work.weixin.qq.com/document/path/90539</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getJsApiSignature</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getAgentConfigSignature</span><span style="color:#24292E;">(</span><span style="color:#E36209;">url</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 根据 url 生成应用签名，生成方法同上，但需要使用应用的 jsapi_ticket</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getJsApiSignature</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getJsApiSignature</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getJsApiTicket</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 获取后端返回的 jsapi_ticket</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ww.</span><span style="color:#6F42C1;">getSignature</span><span style="color:#24292E;">(res.data </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 只传入 jsapi_ticket 字符串的时候，就会自动获取页面 url，时间戳，唯一标识符</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="调用-sendchatmessage-方法" tabindex="-1">调用 <code>sendChatMessage</code> 方法 <a class="header-anchor" href="#调用-sendchatmessage-方法" aria-label="Permalink to &quot;调用 \`sendChatMessage\` 方法&quot;">​</a></h3><p>分享的消息分为 <code>text</code>、<code>image</code>、<code>video</code>、<code>file</code>、<code>news</code>、<code>miniprogram</code> 六种。</p><h4 id="发送小程序卡片" tabindex="-1">发送小程序卡片 <a class="header-anchor" href="#发送小程序卡片" aria-label="Permalink to &quot;发送小程序卡片&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ww.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sendChatMessage&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    msgtype: </span><span style="color:#9ECBFF;">&quot;miniprogram&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//消息类型，必填</span></span>
<span class="line"><span style="color:#E1E4E8;">    enterChat: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 为true时表示发送完成之后顺便进入会话，仅移动端3.1.10及以上版本支持该字段</span></span>
<span class="line"><span style="color:#E1E4E8;">    miniprogram: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      appid: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 小程序的appid</span></span>
<span class="line"><span style="color:#E1E4E8;">      title: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 消息标题</span></span>
<span class="line"><span style="color:#E1E4E8;">      page: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 打开小程序后的路径，例子：pages/home/index</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ww.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sendChatMessage&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    msgtype: </span><span style="color:#032F62;">&quot;miniprogram&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//消息类型，必填</span></span>
<span class="line"><span style="color:#24292E;">    enterChat: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 为true时表示发送完成之后顺便进入会话，仅移动端3.1.10及以上版本支持该字段</span></span>
<span class="line"><span style="color:#24292E;">    miniprogram: {</span></span>
<span class="line"><span style="color:#24292E;">      appid: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 小程序的appid</span></span>
<span class="line"><span style="color:#24292E;">      title: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 消息标题</span></span>
<span class="line"><span style="color:#24292E;">      page: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 打开小程序后的路径，例子：pages/home/index</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h4 id="发送-h5-页面卡片" tabindex="-1">发送 <code>H5</code> 页面卡片 <a class="header-anchor" href="#发送-h5-页面卡片" aria-label="Permalink to &quot;发送 \`H5\` 页面卡片&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ww.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sendChatMessage&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    msgtype: </span><span style="color:#9ECBFF;">&quot;news&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//消息类型，必填</span></span>
<span class="line"><span style="color:#E1E4E8;">    enterChat: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//为true时表示发送完成之后顺便进入会话，仅移动端3.1.10及以上版本支持该字段</span></span>
<span class="line"><span style="color:#E1E4E8;">    news: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      link: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//H5消息页面url 必填</span></span>
<span class="line"><span style="color:#E1E4E8;">      title: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//H5消息标题</span></span>
<span class="line"><span style="color:#E1E4E8;">      desc: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//H5消息摘要</span></span>
<span class="line"><span style="color:#E1E4E8;">      imgUrl: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//H5消息封面图片URL，这个最好填一个合法有效的，貌似不填会报错</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ww.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sendChatMessage&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    msgtype: </span><span style="color:#032F62;">&quot;news&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//消息类型，必填</span></span>
<span class="line"><span style="color:#24292E;">    enterChat: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//为true时表示发送完成之后顺便进入会话，仅移动端3.1.10及以上版本支持该字段</span></span>
<span class="line"><span style="color:#24292E;">    news: {</span></span>
<span class="line"><span style="color:#24292E;">      link: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//H5消息页面url 必填</span></span>
<span class="line"><span style="color:#24292E;">      title: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//H5消息标题</span></span>
<span class="line"><span style="color:#24292E;">      desc: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//H5消息摘要</span></span>
<span class="line"><span style="color:#24292E;">      imgUrl: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//H5消息封面图片URL，这个最好填一个合法有效的，貌似不填会报错</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="效果" tabindex="-1">效果 <a class="header-anchor" href="#效果" aria-label="Permalink to &quot;效果&quot;">​</a></h3><p><img src="https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/blog-images/202310101542239.png" alt="图片" title="图片"></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p><code>@wecom/jssdk</code> 与 <code>weixin-js-sdk</code> 比较而言，做了一些优化，例如注册流程可以只提供 <code>jsapi_ticket</code> 来完成注册。</p><p>但在使用中，我发现直接调用方法，如 <code>sendChatMessage</code>，并不会生效，需要通过 <code>invoke</code> 方法间接调用。</p><p>以及如果你要使用 <code>sendChatMessage</code> 方法，你需要经过三次授权：</p><ol><li>应用的可信域名</li><li>客户联系权限</li><li>注册 <code>JSSDK</code></li></ol><p>其他的问题还有授权的地方过于分散，而且还有文档老旧、客户联系权限的入口不明显等。</p><p>希望以后再继续优化，现在的开发体验只能说可以用。</p>`,32),e=[o];function t(c,r,E,y,i,d){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{h as __pageData,g as default};
